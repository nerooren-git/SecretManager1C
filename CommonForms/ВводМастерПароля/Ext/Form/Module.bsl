&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МастерПарольУжеУстановлен = ЛокальноеХранилище.МастерПарольУжеУстановлен();
	Если МастерПарольУжеУстановлен Тогда
		Элементы.ИнформацияПервыйВвод.Видимость = Ложь;
		Элементы.МастерПарольДубль.Видимость = Ложь;
	Иначе
		Элементы.ИнформацияПовтроныйВвод.Видимость = Ложь;
		Элементы.СменитьМастерПароль.Видимость = Ложь;
	КонецЕсли;
	ОсталосьПопыток = НастройкиКонфигурацииПовтИсп.МаксимальноеКоличествоПопытокВводаМастерПароля();
	Элементы.ИнформацияПовтроныйВвод.Заголовок = СтрШаблон(Элементы.ИнформацияПовтроныйВвод.Заголовок, ОсталосьПопыток);
КонецПроцедуры

&НаКлиенте
Процедура МатерПарольНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элемент.РежимПароля = Не (Элемент.РежимПароля = Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Если Не ЗначениеЗаполнено(МастерПароль) Тогда
		Сообщить("Пароль не может быть пустым");
		Возврат;
	КонецЕсли;
	Если МастерПароль <> МастерПарольДубль Тогда
		Сообщить("Пароли не совпадают");
		Возврат;
	КонецЕсли;
	Если ПроверитьМастерПарольНаСеврере() Тогда
		МастерПарольКлиент.Установить(МастерПароль);
		Закрыть();
	Иначе
		ОсталосьПопыток = ОсталосьПопыток - 1;
		Если ОсталосьПопыток > 0 Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения, СтрШаблон("Неверный мастре пароль! Осталось попыток: %1", ОсталосьПопыток));
		Иначе
			ЗаблокироватьПользователяНаСервере();
			ЗавершитьРаботуСистемы(Ложь, Ложь);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьМастерПарольНаСеврере()
	Возврат ЛокальноеХранилище.ПроверитьМастерПароль(МастерПароль);
КонецФункции

&НаСервере
Процедура ЗаблокироватьПользователяНаСервере()
	ПользователиПривилегированный.ЗаблокироватьПользователя();
КонецПроцедуры

&НаКлиенте
Процедура МатерПарольПриИзменении(Элемент)
	Если МастерПарольУжеУстановлен Тогда
		МастерПарольДубль = МастерПароль;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МастерПарольДубльНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элемент.РежимПароля = Не (Элемент.РежимПароля = Истина);
КонецПроцедуры

&НаКлиенте
Процедура СменитьМастерПарольСсылка(Команда)
	Элементы.ГруппаНовыйМастерПароль.Видимость = Истина;
	Элементы.СменитьМастерПароль.Видимость = Ложь;
КонецПроцедуры

&НаСервере
Процедура СменитьПарольНаСервере(СтарыйОткрытыйКлюч, НовыйОткрытыйКлюч)
	ЛокальноеХранилище.ЗаменитьМастерПароль(СтарыйОткрытыйКлюч, НовыйОткрытыйКлюч);
КонецПроцедуры

&НаКлиенте
Процедура СменитьПароль(Команда)
	Если Не ЗначениеЗаполнено(МастерПароль) Тогда
		Сообщить("Пароль не может быть пустым");
		Возврат;
	КонецЕсли;
	Если МастерПароль <> МастерПарольДубль Тогда
		Сообщить("Пароли не совпадают");
		Возврат;
	КонецЕсли;
	Если МастерПарольНовый <> МастерПарольНовыйДубль Тогда
		Сообщить("Пароли не совпадают");
		Возврат;
	КонецЕсли;
	Если Не ПроверитьМастерПарольНаСеврере() Тогда
		Сообщить("Ошибка пароля");
		Возврат;
	КонецЕсли;
	СменитьПарольНаСервере(МастерПароль, МастерПарольНовый);
	МастерПарольКлиент.Установить(МастерПарольНовый);
	Предупреждение("Мастер пароль успешно заменен");
	Закрыть();
КонецПроцедуры
